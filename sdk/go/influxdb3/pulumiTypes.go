// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package influxdb3

import (
	"context"
	"reflect"

	"github.com/komminarlabs/pulumi-influxdb3/sdk/go/influxdb3/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type DatabasePartitionTemplate struct {
	// The type of template part. Valid values are `bucket`, `tag` or `time`.
	Type string `pulumi:"type"`
	// The value of template part. **Note:** For `bucket` partition template type use `jsonencode()` function to encode the value to a string.
	Value string `pulumi:"value"`
}

// DatabasePartitionTemplateInput is an input type that accepts DatabasePartitionTemplateArgs and DatabasePartitionTemplateOutput values.
// You can construct a concrete instance of `DatabasePartitionTemplateInput` via:
//
//	DatabasePartitionTemplateArgs{...}
type DatabasePartitionTemplateInput interface {
	pulumi.Input

	ToDatabasePartitionTemplateOutput() DatabasePartitionTemplateOutput
	ToDatabasePartitionTemplateOutputWithContext(context.Context) DatabasePartitionTemplateOutput
}

type DatabasePartitionTemplateArgs struct {
	// The type of template part. Valid values are `bucket`, `tag` or `time`.
	Type pulumi.StringInput `pulumi:"type"`
	// The value of template part. **Note:** For `bucket` partition template type use `jsonencode()` function to encode the value to a string.
	Value pulumi.StringInput `pulumi:"value"`
}

func (DatabasePartitionTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabasePartitionTemplate)(nil)).Elem()
}

func (i DatabasePartitionTemplateArgs) ToDatabasePartitionTemplateOutput() DatabasePartitionTemplateOutput {
	return i.ToDatabasePartitionTemplateOutputWithContext(context.Background())
}

func (i DatabasePartitionTemplateArgs) ToDatabasePartitionTemplateOutputWithContext(ctx context.Context) DatabasePartitionTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabasePartitionTemplateOutput)
}

// DatabasePartitionTemplateArrayInput is an input type that accepts DatabasePartitionTemplateArray and DatabasePartitionTemplateArrayOutput values.
// You can construct a concrete instance of `DatabasePartitionTemplateArrayInput` via:
//
//	DatabasePartitionTemplateArray{ DatabasePartitionTemplateArgs{...} }
type DatabasePartitionTemplateArrayInput interface {
	pulumi.Input

	ToDatabasePartitionTemplateArrayOutput() DatabasePartitionTemplateArrayOutput
	ToDatabasePartitionTemplateArrayOutputWithContext(context.Context) DatabasePartitionTemplateArrayOutput
}

type DatabasePartitionTemplateArray []DatabasePartitionTemplateInput

func (DatabasePartitionTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabasePartitionTemplate)(nil)).Elem()
}

func (i DatabasePartitionTemplateArray) ToDatabasePartitionTemplateArrayOutput() DatabasePartitionTemplateArrayOutput {
	return i.ToDatabasePartitionTemplateArrayOutputWithContext(context.Background())
}

func (i DatabasePartitionTemplateArray) ToDatabasePartitionTemplateArrayOutputWithContext(ctx context.Context) DatabasePartitionTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabasePartitionTemplateArrayOutput)
}

type DatabasePartitionTemplateOutput struct{ *pulumi.OutputState }

func (DatabasePartitionTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabasePartitionTemplate)(nil)).Elem()
}

func (o DatabasePartitionTemplateOutput) ToDatabasePartitionTemplateOutput() DatabasePartitionTemplateOutput {
	return o
}

func (o DatabasePartitionTemplateOutput) ToDatabasePartitionTemplateOutputWithContext(ctx context.Context) DatabasePartitionTemplateOutput {
	return o
}

// The type of template part. Valid values are `bucket`, `tag` or `time`.
func (o DatabasePartitionTemplateOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DatabasePartitionTemplate) string { return v.Type }).(pulumi.StringOutput)
}

// The value of template part. **Note:** For `bucket` partition template type use `jsonencode()` function to encode the value to a string.
func (o DatabasePartitionTemplateOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DatabasePartitionTemplate) string { return v.Value }).(pulumi.StringOutput)
}

type DatabasePartitionTemplateArrayOutput struct{ *pulumi.OutputState }

func (DatabasePartitionTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabasePartitionTemplate)(nil)).Elem()
}

func (o DatabasePartitionTemplateArrayOutput) ToDatabasePartitionTemplateArrayOutput() DatabasePartitionTemplateArrayOutput {
	return o
}

func (o DatabasePartitionTemplateArrayOutput) ToDatabasePartitionTemplateArrayOutputWithContext(ctx context.Context) DatabasePartitionTemplateArrayOutput {
	return o
}

func (o DatabasePartitionTemplateArrayOutput) Index(i pulumi.IntInput) DatabasePartitionTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabasePartitionTemplate {
		return vs[0].([]DatabasePartitionTemplate)[vs[1].(int)]
	}).(DatabasePartitionTemplateOutput)
}

type TokenPermission struct {
	// The action the database token permission allows. Valid values are `read` or `write`.
	Action string `pulumi:"action"`
	// The resource the database token permission applies to. `*` refers to all databases.
	Resource string `pulumi:"resource"`
}

// TokenPermissionInput is an input type that accepts TokenPermissionArgs and TokenPermissionOutput values.
// You can construct a concrete instance of `TokenPermissionInput` via:
//
//	TokenPermissionArgs{...}
type TokenPermissionInput interface {
	pulumi.Input

	ToTokenPermissionOutput() TokenPermissionOutput
	ToTokenPermissionOutputWithContext(context.Context) TokenPermissionOutput
}

type TokenPermissionArgs struct {
	// The action the database token permission allows. Valid values are `read` or `write`.
	Action pulumi.StringInput `pulumi:"action"`
	// The resource the database token permission applies to. `*` refers to all databases.
	Resource pulumi.StringInput `pulumi:"resource"`
}

func (TokenPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TokenPermission)(nil)).Elem()
}

func (i TokenPermissionArgs) ToTokenPermissionOutput() TokenPermissionOutput {
	return i.ToTokenPermissionOutputWithContext(context.Background())
}

func (i TokenPermissionArgs) ToTokenPermissionOutputWithContext(ctx context.Context) TokenPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TokenPermissionOutput)
}

// TokenPermissionArrayInput is an input type that accepts TokenPermissionArray and TokenPermissionArrayOutput values.
// You can construct a concrete instance of `TokenPermissionArrayInput` via:
//
//	TokenPermissionArray{ TokenPermissionArgs{...} }
type TokenPermissionArrayInput interface {
	pulumi.Input

	ToTokenPermissionArrayOutput() TokenPermissionArrayOutput
	ToTokenPermissionArrayOutputWithContext(context.Context) TokenPermissionArrayOutput
}

type TokenPermissionArray []TokenPermissionInput

func (TokenPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TokenPermission)(nil)).Elem()
}

func (i TokenPermissionArray) ToTokenPermissionArrayOutput() TokenPermissionArrayOutput {
	return i.ToTokenPermissionArrayOutputWithContext(context.Background())
}

func (i TokenPermissionArray) ToTokenPermissionArrayOutputWithContext(ctx context.Context) TokenPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TokenPermissionArrayOutput)
}

type TokenPermissionOutput struct{ *pulumi.OutputState }

func (TokenPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TokenPermission)(nil)).Elem()
}

func (o TokenPermissionOutput) ToTokenPermissionOutput() TokenPermissionOutput {
	return o
}

func (o TokenPermissionOutput) ToTokenPermissionOutputWithContext(ctx context.Context) TokenPermissionOutput {
	return o
}

// The action the database token permission allows. Valid values are `read` or `write`.
func (o TokenPermissionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v TokenPermission) string { return v.Action }).(pulumi.StringOutput)
}

// The resource the database token permission applies to. `*` refers to all databases.
func (o TokenPermissionOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v TokenPermission) string { return v.Resource }).(pulumi.StringOutput)
}

type TokenPermissionArrayOutput struct{ *pulumi.OutputState }

func (TokenPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TokenPermission)(nil)).Elem()
}

func (o TokenPermissionArrayOutput) ToTokenPermissionArrayOutput() TokenPermissionArrayOutput {
	return o
}

func (o TokenPermissionArrayOutput) ToTokenPermissionArrayOutputWithContext(ctx context.Context) TokenPermissionArrayOutput {
	return o
}

func (o TokenPermissionArrayOutput) Index(i pulumi.IntInput) TokenPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TokenPermission {
		return vs[0].([]TokenPermission)[vs[1].(int)]
	}).(TokenPermissionOutput)
}

type GetDatabasePartitionTemplate struct {
	// The type of template part.
	Type string `pulumi:"type"`
	// The value of template part.
	Value string `pulumi:"value"`
}

// GetDatabasePartitionTemplateInput is an input type that accepts GetDatabasePartitionTemplateArgs and GetDatabasePartitionTemplateOutput values.
// You can construct a concrete instance of `GetDatabasePartitionTemplateInput` via:
//
//	GetDatabasePartitionTemplateArgs{...}
type GetDatabasePartitionTemplateInput interface {
	pulumi.Input

	ToGetDatabasePartitionTemplateOutput() GetDatabasePartitionTemplateOutput
	ToGetDatabasePartitionTemplateOutputWithContext(context.Context) GetDatabasePartitionTemplateOutput
}

type GetDatabasePartitionTemplateArgs struct {
	// The type of template part.
	Type pulumi.StringInput `pulumi:"type"`
	// The value of template part.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetDatabasePartitionTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasePartitionTemplate)(nil)).Elem()
}

func (i GetDatabasePartitionTemplateArgs) ToGetDatabasePartitionTemplateOutput() GetDatabasePartitionTemplateOutput {
	return i.ToGetDatabasePartitionTemplateOutputWithContext(context.Background())
}

func (i GetDatabasePartitionTemplateArgs) ToGetDatabasePartitionTemplateOutputWithContext(ctx context.Context) GetDatabasePartitionTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasePartitionTemplateOutput)
}

// GetDatabasePartitionTemplateArrayInput is an input type that accepts GetDatabasePartitionTemplateArray and GetDatabasePartitionTemplateArrayOutput values.
// You can construct a concrete instance of `GetDatabasePartitionTemplateArrayInput` via:
//
//	GetDatabasePartitionTemplateArray{ GetDatabasePartitionTemplateArgs{...} }
type GetDatabasePartitionTemplateArrayInput interface {
	pulumi.Input

	ToGetDatabasePartitionTemplateArrayOutput() GetDatabasePartitionTemplateArrayOutput
	ToGetDatabasePartitionTemplateArrayOutputWithContext(context.Context) GetDatabasePartitionTemplateArrayOutput
}

type GetDatabasePartitionTemplateArray []GetDatabasePartitionTemplateInput

func (GetDatabasePartitionTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasePartitionTemplate)(nil)).Elem()
}

func (i GetDatabasePartitionTemplateArray) ToGetDatabasePartitionTemplateArrayOutput() GetDatabasePartitionTemplateArrayOutput {
	return i.ToGetDatabasePartitionTemplateArrayOutputWithContext(context.Background())
}

func (i GetDatabasePartitionTemplateArray) ToGetDatabasePartitionTemplateArrayOutputWithContext(ctx context.Context) GetDatabasePartitionTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasePartitionTemplateArrayOutput)
}

type GetDatabasePartitionTemplateOutput struct{ *pulumi.OutputState }

func (GetDatabasePartitionTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasePartitionTemplate)(nil)).Elem()
}

func (o GetDatabasePartitionTemplateOutput) ToGetDatabasePartitionTemplateOutput() GetDatabasePartitionTemplateOutput {
	return o
}

func (o GetDatabasePartitionTemplateOutput) ToGetDatabasePartitionTemplateOutputWithContext(ctx context.Context) GetDatabasePartitionTemplateOutput {
	return o
}

// The type of template part.
func (o GetDatabasePartitionTemplateOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasePartitionTemplate) string { return v.Type }).(pulumi.StringOutput)
}

// The value of template part.
func (o GetDatabasePartitionTemplateOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasePartitionTemplate) string { return v.Value }).(pulumi.StringOutput)
}

type GetDatabasePartitionTemplateArrayOutput struct{ *pulumi.OutputState }

func (GetDatabasePartitionTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasePartitionTemplate)(nil)).Elem()
}

func (o GetDatabasePartitionTemplateArrayOutput) ToGetDatabasePartitionTemplateArrayOutput() GetDatabasePartitionTemplateArrayOutput {
	return o
}

func (o GetDatabasePartitionTemplateArrayOutput) ToGetDatabasePartitionTemplateArrayOutputWithContext(ctx context.Context) GetDatabasePartitionTemplateArrayOutput {
	return o
}

func (o GetDatabasePartitionTemplateArrayOutput) Index(i pulumi.IntInput) GetDatabasePartitionTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabasePartitionTemplate {
		return vs[0].([]GetDatabasePartitionTemplate)[vs[1].(int)]
	}).(GetDatabasePartitionTemplateOutput)
}

type GetDatabasesDatabase struct {
	// The ID of the account that the cluster belongs to.
	AccountId string `pulumi:"accountId"`
	// The ID of the cluster that you want to manage.
	ClusterId string `pulumi:"clusterId"`
	// The maximum number of columns per table for the cluster database.
	MaxColumnsPerTable int `pulumi:"maxColumnsPerTable"`
	// The maximum number of tables for the cluster database.
	MaxTables int `pulumi:"maxTables"`
	// The name of the cluster database.
	Name string `pulumi:"name"`
	// The template partitioning of the cluster database.
	PartitionTemplates []GetDatabasesDatabasePartitionTemplate `pulumi:"partitionTemplates"`
	// The retention period of the cluster database in nanoseconds.
	RetentionPeriod int `pulumi:"retentionPeriod"`
}

// GetDatabasesDatabaseInput is an input type that accepts GetDatabasesDatabaseArgs and GetDatabasesDatabaseOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseInput` via:
//
//	GetDatabasesDatabaseArgs{...}
type GetDatabasesDatabaseInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseOutput() GetDatabasesDatabaseOutput
	ToGetDatabasesDatabaseOutputWithContext(context.Context) GetDatabasesDatabaseOutput
}

type GetDatabasesDatabaseArgs struct {
	// The ID of the account that the cluster belongs to.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The ID of the cluster that you want to manage.
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// The maximum number of columns per table for the cluster database.
	MaxColumnsPerTable pulumi.IntInput `pulumi:"maxColumnsPerTable"`
	// The maximum number of tables for the cluster database.
	MaxTables pulumi.IntInput `pulumi:"maxTables"`
	// The name of the cluster database.
	Name pulumi.StringInput `pulumi:"name"`
	// The template partitioning of the cluster database.
	PartitionTemplates GetDatabasesDatabasePartitionTemplateArrayInput `pulumi:"partitionTemplates"`
	// The retention period of the cluster database in nanoseconds.
	RetentionPeriod pulumi.IntInput `pulumi:"retentionPeriod"`
}

func (GetDatabasesDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabase)(nil)).Elem()
}

func (i GetDatabasesDatabaseArgs) ToGetDatabasesDatabaseOutput() GetDatabasesDatabaseOutput {
	return i.ToGetDatabasesDatabaseOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseArgs) ToGetDatabasesDatabaseOutputWithContext(ctx context.Context) GetDatabasesDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseOutput)
}

// GetDatabasesDatabaseArrayInput is an input type that accepts GetDatabasesDatabaseArray and GetDatabasesDatabaseArrayOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseArrayInput` via:
//
//	GetDatabasesDatabaseArray{ GetDatabasesDatabaseArgs{...} }
type GetDatabasesDatabaseArrayInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseArrayOutput() GetDatabasesDatabaseArrayOutput
	ToGetDatabasesDatabaseArrayOutputWithContext(context.Context) GetDatabasesDatabaseArrayOutput
}

type GetDatabasesDatabaseArray []GetDatabasesDatabaseInput

func (GetDatabasesDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabase)(nil)).Elem()
}

func (i GetDatabasesDatabaseArray) ToGetDatabasesDatabaseArrayOutput() GetDatabasesDatabaseArrayOutput {
	return i.ToGetDatabasesDatabaseArrayOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseArray) ToGetDatabasesDatabaseArrayOutputWithContext(ctx context.Context) GetDatabasesDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseArrayOutput)
}

type GetDatabasesDatabaseOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabase)(nil)).Elem()
}

func (o GetDatabasesDatabaseOutput) ToGetDatabasesDatabaseOutput() GetDatabasesDatabaseOutput {
	return o
}

func (o GetDatabasesDatabaseOutput) ToGetDatabasesDatabaseOutputWithContext(ctx context.Context) GetDatabasesDatabaseOutput {
	return o
}

// The ID of the account that the cluster belongs to.
func (o GetDatabasesDatabaseOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.AccountId }).(pulumi.StringOutput)
}

// The ID of the cluster that you want to manage.
func (o GetDatabasesDatabaseOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.ClusterId }).(pulumi.StringOutput)
}

// The maximum number of columns per table for the cluster database.
func (o GetDatabasesDatabaseOutput) MaxColumnsPerTable() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) int { return v.MaxColumnsPerTable }).(pulumi.IntOutput)
}

// The maximum number of tables for the cluster database.
func (o GetDatabasesDatabaseOutput) MaxTables() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) int { return v.MaxTables }).(pulumi.IntOutput)
}

// The name of the cluster database.
func (o GetDatabasesDatabaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.Name }).(pulumi.StringOutput)
}

// The template partitioning of the cluster database.
func (o GetDatabasesDatabaseOutput) PartitionTemplates() GetDatabasesDatabasePartitionTemplateArrayOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) []GetDatabasesDatabasePartitionTemplate { return v.PartitionTemplates }).(GetDatabasesDatabasePartitionTemplateArrayOutput)
}

// The retention period of the cluster database in nanoseconds.
func (o GetDatabasesDatabaseOutput) RetentionPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) int { return v.RetentionPeriod }).(pulumi.IntOutput)
}

type GetDatabasesDatabaseArrayOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabase)(nil)).Elem()
}

func (o GetDatabasesDatabaseArrayOutput) ToGetDatabasesDatabaseArrayOutput() GetDatabasesDatabaseArrayOutput {
	return o
}

func (o GetDatabasesDatabaseArrayOutput) ToGetDatabasesDatabaseArrayOutputWithContext(ctx context.Context) GetDatabasesDatabaseArrayOutput {
	return o
}

func (o GetDatabasesDatabaseArrayOutput) Index(i pulumi.IntInput) GetDatabasesDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabasesDatabase {
		return vs[0].([]GetDatabasesDatabase)[vs[1].(int)]
	}).(GetDatabasesDatabaseOutput)
}

type GetDatabasesDatabasePartitionTemplate struct {
	// The type of template part.
	Type string `pulumi:"type"`
	// The value of template part.
	Value string `pulumi:"value"`
}

// GetDatabasesDatabasePartitionTemplateInput is an input type that accepts GetDatabasesDatabasePartitionTemplateArgs and GetDatabasesDatabasePartitionTemplateOutput values.
// You can construct a concrete instance of `GetDatabasesDatabasePartitionTemplateInput` via:
//
//	GetDatabasesDatabasePartitionTemplateArgs{...}
type GetDatabasesDatabasePartitionTemplateInput interface {
	pulumi.Input

	ToGetDatabasesDatabasePartitionTemplateOutput() GetDatabasesDatabasePartitionTemplateOutput
	ToGetDatabasesDatabasePartitionTemplateOutputWithContext(context.Context) GetDatabasesDatabasePartitionTemplateOutput
}

type GetDatabasesDatabasePartitionTemplateArgs struct {
	// The type of template part.
	Type pulumi.StringInput `pulumi:"type"`
	// The value of template part.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetDatabasesDatabasePartitionTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabasePartitionTemplate)(nil)).Elem()
}

func (i GetDatabasesDatabasePartitionTemplateArgs) ToGetDatabasesDatabasePartitionTemplateOutput() GetDatabasesDatabasePartitionTemplateOutput {
	return i.ToGetDatabasesDatabasePartitionTemplateOutputWithContext(context.Background())
}

func (i GetDatabasesDatabasePartitionTemplateArgs) ToGetDatabasesDatabasePartitionTemplateOutputWithContext(ctx context.Context) GetDatabasesDatabasePartitionTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabasePartitionTemplateOutput)
}

// GetDatabasesDatabasePartitionTemplateArrayInput is an input type that accepts GetDatabasesDatabasePartitionTemplateArray and GetDatabasesDatabasePartitionTemplateArrayOutput values.
// You can construct a concrete instance of `GetDatabasesDatabasePartitionTemplateArrayInput` via:
//
//	GetDatabasesDatabasePartitionTemplateArray{ GetDatabasesDatabasePartitionTemplateArgs{...} }
type GetDatabasesDatabasePartitionTemplateArrayInput interface {
	pulumi.Input

	ToGetDatabasesDatabasePartitionTemplateArrayOutput() GetDatabasesDatabasePartitionTemplateArrayOutput
	ToGetDatabasesDatabasePartitionTemplateArrayOutputWithContext(context.Context) GetDatabasesDatabasePartitionTemplateArrayOutput
}

type GetDatabasesDatabasePartitionTemplateArray []GetDatabasesDatabasePartitionTemplateInput

func (GetDatabasesDatabasePartitionTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabasePartitionTemplate)(nil)).Elem()
}

func (i GetDatabasesDatabasePartitionTemplateArray) ToGetDatabasesDatabasePartitionTemplateArrayOutput() GetDatabasesDatabasePartitionTemplateArrayOutput {
	return i.ToGetDatabasesDatabasePartitionTemplateArrayOutputWithContext(context.Background())
}

func (i GetDatabasesDatabasePartitionTemplateArray) ToGetDatabasesDatabasePartitionTemplateArrayOutputWithContext(ctx context.Context) GetDatabasesDatabasePartitionTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabasePartitionTemplateArrayOutput)
}

type GetDatabasesDatabasePartitionTemplateOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabasePartitionTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabasePartitionTemplate)(nil)).Elem()
}

func (o GetDatabasesDatabasePartitionTemplateOutput) ToGetDatabasesDatabasePartitionTemplateOutput() GetDatabasesDatabasePartitionTemplateOutput {
	return o
}

func (o GetDatabasesDatabasePartitionTemplateOutput) ToGetDatabasesDatabasePartitionTemplateOutputWithContext(ctx context.Context) GetDatabasesDatabasePartitionTemplateOutput {
	return o
}

// The type of template part.
func (o GetDatabasesDatabasePartitionTemplateOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabasePartitionTemplate) string { return v.Type }).(pulumi.StringOutput)
}

// The value of template part.
func (o GetDatabasesDatabasePartitionTemplateOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabasePartitionTemplate) string { return v.Value }).(pulumi.StringOutput)
}

type GetDatabasesDatabasePartitionTemplateArrayOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabasePartitionTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabasePartitionTemplate)(nil)).Elem()
}

func (o GetDatabasesDatabasePartitionTemplateArrayOutput) ToGetDatabasesDatabasePartitionTemplateArrayOutput() GetDatabasesDatabasePartitionTemplateArrayOutput {
	return o
}

func (o GetDatabasesDatabasePartitionTemplateArrayOutput) ToGetDatabasesDatabasePartitionTemplateArrayOutputWithContext(ctx context.Context) GetDatabasesDatabasePartitionTemplateArrayOutput {
	return o
}

func (o GetDatabasesDatabasePartitionTemplateArrayOutput) Index(i pulumi.IntInput) GetDatabasesDatabasePartitionTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabasesDatabasePartitionTemplate {
		return vs[0].([]GetDatabasesDatabasePartitionTemplate)[vs[1].(int)]
	}).(GetDatabasesDatabasePartitionTemplateOutput)
}

type GetTokenPermission struct {
	// The action the database token permission allows.
	Action string `pulumi:"action"`
	// The resource the database token permission applies to. `*` refers to all databases.
	Resource string `pulumi:"resource"`
}

// GetTokenPermissionInput is an input type that accepts GetTokenPermissionArgs and GetTokenPermissionOutput values.
// You can construct a concrete instance of `GetTokenPermissionInput` via:
//
//	GetTokenPermissionArgs{...}
type GetTokenPermissionInput interface {
	pulumi.Input

	ToGetTokenPermissionOutput() GetTokenPermissionOutput
	ToGetTokenPermissionOutputWithContext(context.Context) GetTokenPermissionOutput
}

type GetTokenPermissionArgs struct {
	// The action the database token permission allows.
	Action pulumi.StringInput `pulumi:"action"`
	// The resource the database token permission applies to. `*` refers to all databases.
	Resource pulumi.StringInput `pulumi:"resource"`
}

func (GetTokenPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTokenPermission)(nil)).Elem()
}

func (i GetTokenPermissionArgs) ToGetTokenPermissionOutput() GetTokenPermissionOutput {
	return i.ToGetTokenPermissionOutputWithContext(context.Background())
}

func (i GetTokenPermissionArgs) ToGetTokenPermissionOutputWithContext(ctx context.Context) GetTokenPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTokenPermissionOutput)
}

// GetTokenPermissionArrayInput is an input type that accepts GetTokenPermissionArray and GetTokenPermissionArrayOutput values.
// You can construct a concrete instance of `GetTokenPermissionArrayInput` via:
//
//	GetTokenPermissionArray{ GetTokenPermissionArgs{...} }
type GetTokenPermissionArrayInput interface {
	pulumi.Input

	ToGetTokenPermissionArrayOutput() GetTokenPermissionArrayOutput
	ToGetTokenPermissionArrayOutputWithContext(context.Context) GetTokenPermissionArrayOutput
}

type GetTokenPermissionArray []GetTokenPermissionInput

func (GetTokenPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTokenPermission)(nil)).Elem()
}

func (i GetTokenPermissionArray) ToGetTokenPermissionArrayOutput() GetTokenPermissionArrayOutput {
	return i.ToGetTokenPermissionArrayOutputWithContext(context.Background())
}

func (i GetTokenPermissionArray) ToGetTokenPermissionArrayOutputWithContext(ctx context.Context) GetTokenPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTokenPermissionArrayOutput)
}

type GetTokenPermissionOutput struct{ *pulumi.OutputState }

func (GetTokenPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTokenPermission)(nil)).Elem()
}

func (o GetTokenPermissionOutput) ToGetTokenPermissionOutput() GetTokenPermissionOutput {
	return o
}

func (o GetTokenPermissionOutput) ToGetTokenPermissionOutputWithContext(ctx context.Context) GetTokenPermissionOutput {
	return o
}

// The action the database token permission allows.
func (o GetTokenPermissionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetTokenPermission) string { return v.Action }).(pulumi.StringOutput)
}

// The resource the database token permission applies to. `*` refers to all databases.
func (o GetTokenPermissionOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetTokenPermission) string { return v.Resource }).(pulumi.StringOutput)
}

type GetTokenPermissionArrayOutput struct{ *pulumi.OutputState }

func (GetTokenPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTokenPermission)(nil)).Elem()
}

func (o GetTokenPermissionArrayOutput) ToGetTokenPermissionArrayOutput() GetTokenPermissionArrayOutput {
	return o
}

func (o GetTokenPermissionArrayOutput) ToGetTokenPermissionArrayOutputWithContext(ctx context.Context) GetTokenPermissionArrayOutput {
	return o
}

func (o GetTokenPermissionArrayOutput) Index(i pulumi.IntInput) GetTokenPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTokenPermission {
		return vs[0].([]GetTokenPermission)[vs[1].(int)]
	}).(GetTokenPermissionOutput)
}

type GetTokensToken struct {
	// The access token that can be used to authenticate query and write requests to the cluster. The access token is never stored by InfluxDB and is only returned once when the token is created. If the access token is lost, a new token must be created.
	AccessToken string `pulumi:"accessToken"`
	// The ID of the account that the database token belongs to.
	AccountId string `pulumi:"accountId"`
	// The ID of the cluster that the database token belongs to.
	ClusterId string `pulumi:"clusterId"`
	// The date and time that the database token was created. Uses RFC3339 format.
	CreatedAt string `pulumi:"createdAt"`
	// The description of the database token.
	Description string `pulumi:"description"`
	// The ID of the database token.
	Id string `pulumi:"id"`
	// The list of permissions the database token allows.
	Permissions []GetTokensTokenPermission `pulumi:"permissions"`
}

// GetTokensTokenInput is an input type that accepts GetTokensTokenArgs and GetTokensTokenOutput values.
// You can construct a concrete instance of `GetTokensTokenInput` via:
//
//	GetTokensTokenArgs{...}
type GetTokensTokenInput interface {
	pulumi.Input

	ToGetTokensTokenOutput() GetTokensTokenOutput
	ToGetTokensTokenOutputWithContext(context.Context) GetTokensTokenOutput
}

type GetTokensTokenArgs struct {
	// The access token that can be used to authenticate query and write requests to the cluster. The access token is never stored by InfluxDB and is only returned once when the token is created. If the access token is lost, a new token must be created.
	AccessToken pulumi.StringInput `pulumi:"accessToken"`
	// The ID of the account that the database token belongs to.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The ID of the cluster that the database token belongs to.
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// The date and time that the database token was created. Uses RFC3339 format.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The description of the database token.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the database token.
	Id pulumi.StringInput `pulumi:"id"`
	// The list of permissions the database token allows.
	Permissions GetTokensTokenPermissionArrayInput `pulumi:"permissions"`
}

func (GetTokensTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTokensToken)(nil)).Elem()
}

func (i GetTokensTokenArgs) ToGetTokensTokenOutput() GetTokensTokenOutput {
	return i.ToGetTokensTokenOutputWithContext(context.Background())
}

func (i GetTokensTokenArgs) ToGetTokensTokenOutputWithContext(ctx context.Context) GetTokensTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTokensTokenOutput)
}

// GetTokensTokenArrayInput is an input type that accepts GetTokensTokenArray and GetTokensTokenArrayOutput values.
// You can construct a concrete instance of `GetTokensTokenArrayInput` via:
//
//	GetTokensTokenArray{ GetTokensTokenArgs{...} }
type GetTokensTokenArrayInput interface {
	pulumi.Input

	ToGetTokensTokenArrayOutput() GetTokensTokenArrayOutput
	ToGetTokensTokenArrayOutputWithContext(context.Context) GetTokensTokenArrayOutput
}

type GetTokensTokenArray []GetTokensTokenInput

func (GetTokensTokenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTokensToken)(nil)).Elem()
}

func (i GetTokensTokenArray) ToGetTokensTokenArrayOutput() GetTokensTokenArrayOutput {
	return i.ToGetTokensTokenArrayOutputWithContext(context.Background())
}

func (i GetTokensTokenArray) ToGetTokensTokenArrayOutputWithContext(ctx context.Context) GetTokensTokenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTokensTokenArrayOutput)
}

type GetTokensTokenOutput struct{ *pulumi.OutputState }

func (GetTokensTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTokensToken)(nil)).Elem()
}

func (o GetTokensTokenOutput) ToGetTokensTokenOutput() GetTokensTokenOutput {
	return o
}

func (o GetTokensTokenOutput) ToGetTokensTokenOutputWithContext(ctx context.Context) GetTokensTokenOutput {
	return o
}

// The access token that can be used to authenticate query and write requests to the cluster. The access token is never stored by InfluxDB and is only returned once when the token is created. If the access token is lost, a new token must be created.
func (o GetTokensTokenOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetTokensToken) string { return v.AccessToken }).(pulumi.StringOutput)
}

// The ID of the account that the database token belongs to.
func (o GetTokensTokenOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTokensToken) string { return v.AccountId }).(pulumi.StringOutput)
}

// The ID of the cluster that the database token belongs to.
func (o GetTokensTokenOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTokensToken) string { return v.ClusterId }).(pulumi.StringOutput)
}

// The date and time that the database token was created. Uses RFC3339 format.
func (o GetTokensTokenOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetTokensToken) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of the database token.
func (o GetTokensTokenOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTokensToken) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the database token.
func (o GetTokensTokenOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTokensToken) string { return v.Id }).(pulumi.StringOutput)
}

// The list of permissions the database token allows.
func (o GetTokensTokenOutput) Permissions() GetTokensTokenPermissionArrayOutput {
	return o.ApplyT(func(v GetTokensToken) []GetTokensTokenPermission { return v.Permissions }).(GetTokensTokenPermissionArrayOutput)
}

type GetTokensTokenArrayOutput struct{ *pulumi.OutputState }

func (GetTokensTokenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTokensToken)(nil)).Elem()
}

func (o GetTokensTokenArrayOutput) ToGetTokensTokenArrayOutput() GetTokensTokenArrayOutput {
	return o
}

func (o GetTokensTokenArrayOutput) ToGetTokensTokenArrayOutputWithContext(ctx context.Context) GetTokensTokenArrayOutput {
	return o
}

func (o GetTokensTokenArrayOutput) Index(i pulumi.IntInput) GetTokensTokenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTokensToken {
		return vs[0].([]GetTokensToken)[vs[1].(int)]
	}).(GetTokensTokenOutput)
}

type GetTokensTokenPermission struct {
	// The action the database token permission allows.
	Action string `pulumi:"action"`
	// The resource the database token permission applies to. `*` refers to all databases.
	Resource string `pulumi:"resource"`
}

// GetTokensTokenPermissionInput is an input type that accepts GetTokensTokenPermissionArgs and GetTokensTokenPermissionOutput values.
// You can construct a concrete instance of `GetTokensTokenPermissionInput` via:
//
//	GetTokensTokenPermissionArgs{...}
type GetTokensTokenPermissionInput interface {
	pulumi.Input

	ToGetTokensTokenPermissionOutput() GetTokensTokenPermissionOutput
	ToGetTokensTokenPermissionOutputWithContext(context.Context) GetTokensTokenPermissionOutput
}

type GetTokensTokenPermissionArgs struct {
	// The action the database token permission allows.
	Action pulumi.StringInput `pulumi:"action"`
	// The resource the database token permission applies to. `*` refers to all databases.
	Resource pulumi.StringInput `pulumi:"resource"`
}

func (GetTokensTokenPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTokensTokenPermission)(nil)).Elem()
}

func (i GetTokensTokenPermissionArgs) ToGetTokensTokenPermissionOutput() GetTokensTokenPermissionOutput {
	return i.ToGetTokensTokenPermissionOutputWithContext(context.Background())
}

func (i GetTokensTokenPermissionArgs) ToGetTokensTokenPermissionOutputWithContext(ctx context.Context) GetTokensTokenPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTokensTokenPermissionOutput)
}

// GetTokensTokenPermissionArrayInput is an input type that accepts GetTokensTokenPermissionArray and GetTokensTokenPermissionArrayOutput values.
// You can construct a concrete instance of `GetTokensTokenPermissionArrayInput` via:
//
//	GetTokensTokenPermissionArray{ GetTokensTokenPermissionArgs{...} }
type GetTokensTokenPermissionArrayInput interface {
	pulumi.Input

	ToGetTokensTokenPermissionArrayOutput() GetTokensTokenPermissionArrayOutput
	ToGetTokensTokenPermissionArrayOutputWithContext(context.Context) GetTokensTokenPermissionArrayOutput
}

type GetTokensTokenPermissionArray []GetTokensTokenPermissionInput

func (GetTokensTokenPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTokensTokenPermission)(nil)).Elem()
}

func (i GetTokensTokenPermissionArray) ToGetTokensTokenPermissionArrayOutput() GetTokensTokenPermissionArrayOutput {
	return i.ToGetTokensTokenPermissionArrayOutputWithContext(context.Background())
}

func (i GetTokensTokenPermissionArray) ToGetTokensTokenPermissionArrayOutputWithContext(ctx context.Context) GetTokensTokenPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTokensTokenPermissionArrayOutput)
}

type GetTokensTokenPermissionOutput struct{ *pulumi.OutputState }

func (GetTokensTokenPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTokensTokenPermission)(nil)).Elem()
}

func (o GetTokensTokenPermissionOutput) ToGetTokensTokenPermissionOutput() GetTokensTokenPermissionOutput {
	return o
}

func (o GetTokensTokenPermissionOutput) ToGetTokensTokenPermissionOutputWithContext(ctx context.Context) GetTokensTokenPermissionOutput {
	return o
}

// The action the database token permission allows.
func (o GetTokensTokenPermissionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetTokensTokenPermission) string { return v.Action }).(pulumi.StringOutput)
}

// The resource the database token permission applies to. `*` refers to all databases.
func (o GetTokensTokenPermissionOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetTokensTokenPermission) string { return v.Resource }).(pulumi.StringOutput)
}

type GetTokensTokenPermissionArrayOutput struct{ *pulumi.OutputState }

func (GetTokensTokenPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTokensTokenPermission)(nil)).Elem()
}

func (o GetTokensTokenPermissionArrayOutput) ToGetTokensTokenPermissionArrayOutput() GetTokensTokenPermissionArrayOutput {
	return o
}

func (o GetTokensTokenPermissionArrayOutput) ToGetTokensTokenPermissionArrayOutputWithContext(ctx context.Context) GetTokensTokenPermissionArrayOutput {
	return o
}

func (o GetTokensTokenPermissionArrayOutput) Index(i pulumi.IntInput) GetTokensTokenPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTokensTokenPermission {
		return vs[0].([]GetTokensTokenPermission)[vs[1].(int)]
	}).(GetTokensTokenPermissionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DatabasePartitionTemplateInput)(nil)).Elem(), DatabasePartitionTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabasePartitionTemplateArrayInput)(nil)).Elem(), DatabasePartitionTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TokenPermissionInput)(nil)).Elem(), TokenPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TokenPermissionArrayInput)(nil)).Elem(), TokenPermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasePartitionTemplateInput)(nil)).Elem(), GetDatabasePartitionTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasePartitionTemplateArrayInput)(nil)).Elem(), GetDatabasePartitionTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseInput)(nil)).Elem(), GetDatabasesDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseArrayInput)(nil)).Elem(), GetDatabasesDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabasePartitionTemplateInput)(nil)).Elem(), GetDatabasesDatabasePartitionTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabasePartitionTemplateArrayInput)(nil)).Elem(), GetDatabasesDatabasePartitionTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTokenPermissionInput)(nil)).Elem(), GetTokenPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTokenPermissionArrayInput)(nil)).Elem(), GetTokenPermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTokensTokenInput)(nil)).Elem(), GetTokensTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTokensTokenArrayInput)(nil)).Elem(), GetTokensTokenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTokensTokenPermissionInput)(nil)).Elem(), GetTokensTokenPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTokensTokenPermissionArrayInput)(nil)).Elem(), GetTokensTokenPermissionArray{})
	pulumi.RegisterOutputType(DatabasePartitionTemplateOutput{})
	pulumi.RegisterOutputType(DatabasePartitionTemplateArrayOutput{})
	pulumi.RegisterOutputType(TokenPermissionOutput{})
	pulumi.RegisterOutputType(TokenPermissionArrayOutput{})
	pulumi.RegisterOutputType(GetDatabasePartitionTemplateOutput{})
	pulumi.RegisterOutputType(GetDatabasePartitionTemplateArrayOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseArrayOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabasePartitionTemplateOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabasePartitionTemplateArrayOutput{})
	pulumi.RegisterOutputType(GetTokenPermissionOutput{})
	pulumi.RegisterOutputType(GetTokenPermissionArrayOutput{})
	pulumi.RegisterOutputType(GetTokensTokenOutput{})
	pulumi.RegisterOutputType(GetTokensTokenArrayOutput{})
	pulumi.RegisterOutputType(GetTokensTokenPermissionOutput{})
	pulumi.RegisterOutputType(GetTokensTokenPermissionArrayOutput{})
}
