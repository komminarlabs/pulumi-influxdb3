// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package influxdb3

import (
	"context"
	"reflect"

	"github.com/komminarlabs/pulumi-influxdb3/sdk/go/influxdb3/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets a database token. Use this data source to retrieve information about a database token, including the token's permissions.
func LookupToken(ctx *pulumi.Context, args *LookupTokenArgs, opts ...pulumi.InvokeOption) (*LookupTokenResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTokenResult
	err := ctx.Invoke("influxdb3:index/getToken:getToken", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getToken.
type LookupTokenArgs struct {
	// The ID of the database token.
	Id string `pulumi:"id"`
}

// A collection of values returned by getToken.
type LookupTokenResult struct {
	// The access token that can be used to authenticate query and write requests to the cluster. The access token is never stored by InfluxDB and is only returned once when the token is created. If the access token is lost, a new token must be created.
	AccessToken string `pulumi:"accessToken"`
	// The ID of the account that the database token belongs to.
	AccountId string `pulumi:"accountId"`
	// The ID of the cluster that the database token belongs to.
	ClusterId string `pulumi:"clusterId"`
	// The date and time that the database token was created. Uses RFC3339 format.
	CreatedAt string `pulumi:"createdAt"`
	// The description of the database token.
	Description string `pulumi:"description"`
	// The ID of the database token.
	Id string `pulumi:"id"`
	// The list of permissions the database token allows.
	Permissions []GetTokenPermission `pulumi:"permissions"`
}

func LookupTokenOutput(ctx *pulumi.Context, args LookupTokenOutputArgs, opts ...pulumi.InvokeOption) LookupTokenResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTokenResult, error) {
			args := v.(LookupTokenArgs)
			r, err := LookupToken(ctx, &args, opts...)
			var s LookupTokenResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupTokenResultOutput)
}

// A collection of arguments for invoking getToken.
type LookupTokenOutputArgs struct {
	// The ID of the database token.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupTokenOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTokenArgs)(nil)).Elem()
}

// A collection of values returned by getToken.
type LookupTokenResultOutput struct{ *pulumi.OutputState }

func (LookupTokenResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTokenResult)(nil)).Elem()
}

func (o LookupTokenResultOutput) ToLookupTokenResultOutput() LookupTokenResultOutput {
	return o
}

func (o LookupTokenResultOutput) ToLookupTokenResultOutputWithContext(ctx context.Context) LookupTokenResultOutput {
	return o
}

// The access token that can be used to authenticate query and write requests to the cluster. The access token is never stored by InfluxDB and is only returned once when the token is created. If the access token is lost, a new token must be created.
func (o LookupTokenResultOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTokenResult) string { return v.AccessToken }).(pulumi.StringOutput)
}

// The ID of the account that the database token belongs to.
func (o LookupTokenResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTokenResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// The ID of the cluster that the database token belongs to.
func (o LookupTokenResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTokenResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

// The date and time that the database token was created. Uses RFC3339 format.
func (o LookupTokenResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTokenResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of the database token.
func (o LookupTokenResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTokenResult) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the database token.
func (o LookupTokenResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTokenResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of permissions the database token allows.
func (o LookupTokenResultOutput) Permissions() GetTokenPermissionArrayOutput {
	return o.ApplyT(func(v LookupTokenResult) []GetTokenPermission { return v.Permissions }).(GetTokenPermissionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTokenResultOutput{})
}
