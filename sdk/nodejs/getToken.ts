// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Gets a database token. Use this data source to retrieve information about a database token, including the token's permissions.
 */
export function getToken(args: GetTokenArgs, opts?: pulumi.InvokeOptions): Promise<GetTokenResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("influxdb3:index/getToken:getToken", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getToken.
 */
export interface GetTokenArgs {
    /**
     * The ID of the database token.
     */
    id: string;
}

/**
 * A collection of values returned by getToken.
 */
export interface GetTokenResult {
    /**
     * The access token that can be used to authenticate query and write requests to the cluster. The access token is never stored by InfluxDB and is only returned once when the token is created. If the access token is lost, a new token must be created.
     */
    readonly accessToken: string;
    /**
     * The ID of the account that the database token belongs to.
     */
    readonly accountId: string;
    /**
     * The ID of the cluster that the database token belongs to.
     */
    readonly clusterId: string;
    /**
     * The date and time that the database token was created. Uses RFC3339 format.
     */
    readonly createdAt: string;
    /**
     * The description of the database token.
     */
    readonly description: string;
    /**
     * The ID of the database token.
     */
    readonly id: string;
    /**
     * The list of permissions the database token allows.
     */
    readonly permissions: outputs.GetTokenPermission[];
}
/**
 * Gets a database token. Use this data source to retrieve information about a database token, including the token's permissions.
 */
export function getTokenOutput(args: GetTokenOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTokenResult> {
    return pulumi.output(args).apply((a: any) => getToken(a, opts))
}

/**
 * A collection of arguments for invoking getToken.
 */
export interface GetTokenOutputArgs {
    /**
     * The ID of the database token.
     */
    id: pulumi.Input<string>;
}
