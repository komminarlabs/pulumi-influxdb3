// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Creates and manages a database.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as influxdb3 from "@komminarlabs/influxdb3";
 *
 * const signals = new influxdb3.Database("signals", {
 *     retentionPeriod: 604800,
 *     partitionTemplates: [
 *         {
 *             type: "tag",
 *             value: "line",
 *         },
 *         {
 *             type: "tag",
 *             value: "station",
 *         },
 *         {
 *             type: "time",
 *             value: "%Y-%m-%d",
 *         },
 *         {
 *             type: "bucket",
 *             value: JSON.stringify({
 *                 tagName: "temperature",
 *                 numberOfBuckets: 10,
 *             }),
 *         },
 *     ],
 * });
 * ```
 */
export class Database extends pulumi.CustomResource {
    /**
     * Get an existing Database resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatabaseState, opts?: pulumi.CustomResourceOptions): Database {
        return new Database(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'influxdb3:index/database:Database';

    /**
     * Returns true if the given object is an instance of Database.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Database {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Database.__pulumiType;
    }

    /**
     * The ID of the account that the cluster belongs to.
     */
    public /*out*/ readonly accountId!: pulumi.Output<string>;
    /**
     * The ID of the cluster that you want to manage.
     */
    public /*out*/ readonly clusterId!: pulumi.Output<string>;
    /**
     * The maximum number of columns per table for the cluster database. The default is `200`
     */
    public readonly maxColumnsPerTable!: pulumi.Output<number>;
    /**
     * The maximum number of tables for the cluster database. The default is `500`
     */
    public readonly maxTables!: pulumi.Output<number>;
    /**
     * The name of the cluster database. The Length should be between `[ 1 .. 64 ]` characters. **Note:** Database names can't be updated.  An update will result in resource replacement. After a database is deleted, you cannot [reuse](https://docs.influxdata.com/influxdb/cloud-dedicated/admin/databases/delete/#cannot-reuse-database-names) the same name for a new database.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * A template for [partitioning](https://docs.influxdata.com/influxdb/cloud-dedicated/admin/custom-partitions/partition-templates/) a cluster database. **Note:** A partition template can include up to 7 total tag and tag bucket parts and only 1 time part. You can only apply a partition template when creating a database. You [can't update a partition template](https://docs.influxdata.com/influxdb/cloud-dedicated/admin/databases/create/#partition-templates-can-only-be-applied-on-create) on an existing database. An update will result in resource replacement.
     */
    public readonly partitionTemplates!: pulumi.Output<outputs.DatabasePartitionTemplate[]>;
    /**
     * The retention period of the cluster database in nanoseconds. The default is `0`. If the retention period is not set or is set to `0`, the database will have infinite retention.
     */
    public readonly retentionPeriod!: pulumi.Output<number>;

    /**
     * Create a Database resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DatabaseArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DatabaseArgs | DatabaseState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DatabaseState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["maxColumnsPerTable"] = state ? state.maxColumnsPerTable : undefined;
            resourceInputs["maxTables"] = state ? state.maxTables : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["partitionTemplates"] = state ? state.partitionTemplates : undefined;
            resourceInputs["retentionPeriod"] = state ? state.retentionPeriod : undefined;
        } else {
            const args = argsOrState as DatabaseArgs | undefined;
            resourceInputs["maxColumnsPerTable"] = args ? args.maxColumnsPerTable : undefined;
            resourceInputs["maxTables"] = args ? args.maxTables : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["partitionTemplates"] = args ? args.partitionTemplates : undefined;
            resourceInputs["retentionPeriod"] = args ? args.retentionPeriod : undefined;
            resourceInputs["accountId"] = undefined /*out*/;
            resourceInputs["clusterId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Database.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Database resources.
 */
export interface DatabaseState {
    /**
     * The ID of the account that the cluster belongs to.
     */
    accountId?: pulumi.Input<string>;
    /**
     * The ID of the cluster that you want to manage.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * The maximum number of columns per table for the cluster database. The default is `200`
     */
    maxColumnsPerTable?: pulumi.Input<number>;
    /**
     * The maximum number of tables for the cluster database. The default is `500`
     */
    maxTables?: pulumi.Input<number>;
    /**
     * The name of the cluster database. The Length should be between `[ 1 .. 64 ]` characters. **Note:** Database names can't be updated.  An update will result in resource replacement. After a database is deleted, you cannot [reuse](https://docs.influxdata.com/influxdb/cloud-dedicated/admin/databases/delete/#cannot-reuse-database-names) the same name for a new database.
     */
    name?: pulumi.Input<string>;
    /**
     * A template for [partitioning](https://docs.influxdata.com/influxdb/cloud-dedicated/admin/custom-partitions/partition-templates/) a cluster database. **Note:** A partition template can include up to 7 total tag and tag bucket parts and only 1 time part. You can only apply a partition template when creating a database. You [can't update a partition template](https://docs.influxdata.com/influxdb/cloud-dedicated/admin/databases/create/#partition-templates-can-only-be-applied-on-create) on an existing database. An update will result in resource replacement.
     */
    partitionTemplates?: pulumi.Input<pulumi.Input<inputs.DatabasePartitionTemplate>[]>;
    /**
     * The retention period of the cluster database in nanoseconds. The default is `0`. If the retention period is not set or is set to `0`, the database will have infinite retention.
     */
    retentionPeriod?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Database resource.
 */
export interface DatabaseArgs {
    /**
     * The maximum number of columns per table for the cluster database. The default is `200`
     */
    maxColumnsPerTable?: pulumi.Input<number>;
    /**
     * The maximum number of tables for the cluster database. The default is `500`
     */
    maxTables?: pulumi.Input<number>;
    /**
     * The name of the cluster database. The Length should be between `[ 1 .. 64 ]` characters. **Note:** Database names can't be updated.  An update will result in resource replacement. After a database is deleted, you cannot [reuse](https://docs.influxdata.com/influxdb/cloud-dedicated/admin/databases/delete/#cannot-reuse-database-names) the same name for a new database.
     */
    name?: pulumi.Input<string>;
    /**
     * A template for [partitioning](https://docs.influxdata.com/influxdb/cloud-dedicated/admin/custom-partitions/partition-templates/) a cluster database. **Note:** A partition template can include up to 7 total tag and tag bucket parts and only 1 time part. You can only apply a partition template when creating a database. You [can't update a partition template](https://docs.influxdata.com/influxdb/cloud-dedicated/admin/databases/create/#partition-templates-can-only-be-applied-on-create) on an existing database. An update will result in resource replacement.
     */
    partitionTemplates?: pulumi.Input<pulumi.Input<inputs.DatabasePartitionTemplate>[]>;
    /**
     * The retention period of the cluster database in nanoseconds. The default is `0`. If the retention period is not set or is set to `0`, the database will have infinite retention.
     */
    retentionPeriod?: pulumi.Input<number>;
}
