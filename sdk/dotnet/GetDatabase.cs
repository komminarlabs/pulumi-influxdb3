// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace KomminarLabs.InfluxDB3
{
    public static class GetDatabase
    {
        /// <summary>
        /// Retrieves a database. Use this data source to retrieve information for a specific database.
        /// </summary>
        public static Task<GetDatabaseResult> InvokeAsync(GetDatabaseArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDatabaseResult>("influxdb3:index/getDatabase:getDatabase", args ?? new GetDatabaseArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves a database. Use this data source to retrieve information for a specific database.
        /// </summary>
        public static Output<GetDatabaseResult> Invoke(GetDatabaseInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDatabaseResult>("influxdb3:index/getDatabase:getDatabase", args ?? new GetDatabaseInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDatabaseArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the cluster database.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetDatabaseArgs()
        {
        }
        public static new GetDatabaseArgs Empty => new GetDatabaseArgs();
    }

    public sealed class GetDatabaseInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the cluster database.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetDatabaseInvokeArgs()
        {
        }
        public static new GetDatabaseInvokeArgs Empty => new GetDatabaseInvokeArgs();
    }


    [OutputType]
    public sealed class GetDatabaseResult
    {
        /// <summary>
        /// The ID of the account that the cluster belongs to.
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// The ID of the cluster that you want to manage.
        /// </summary>
        public readonly string ClusterId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The maximum number of columns per table for the cluster database.
        /// </summary>
        public readonly int MaxColumnsPerTable;
        /// <summary>
        /// The maximum number of tables for the cluster database.
        /// </summary>
        public readonly int MaxTables;
        /// <summary>
        /// The name of the cluster database.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The template partitioning of the cluster database.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDatabasePartitionTemplateResult> PartitionTemplates;
        /// <summary>
        /// The retention period of the cluster database in nanoseconds.
        /// </summary>
        public readonly int RetentionPeriod;

        [OutputConstructor]
        private GetDatabaseResult(
            string accountId,

            string clusterId,

            string id,

            int maxColumnsPerTable,

            int maxTables,

            string name,

            ImmutableArray<Outputs.GetDatabasePartitionTemplateResult> partitionTemplates,

            int retentionPeriod)
        {
            AccountId = accountId;
            ClusterId = clusterId;
            Id = id;
            MaxColumnsPerTable = maxColumnsPerTable;
            MaxTables = maxTables;
            Name = name;
            PartitionTemplates = partitionTemplates;
            RetentionPeriod = retentionPeriod;
        }
    }
}
