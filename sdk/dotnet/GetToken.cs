// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace KomminarLabs.InfluxDB3
{
    public static class GetToken
    {
        /// <summary>
        /// Gets a database token. Use this data source to retrieve information about a database token, including the token's permissions.
        /// </summary>
        public static Task<GetTokenResult> InvokeAsync(GetTokenArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTokenResult>("influxdb3:index/getToken:getToken", args ?? new GetTokenArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a database token. Use this data source to retrieve information about a database token, including the token's permissions.
        /// </summary>
        public static Output<GetTokenResult> Invoke(GetTokenInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTokenResult>("influxdb3:index/getToken:getToken", args ?? new GetTokenInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTokenArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the database token.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetTokenArgs()
        {
        }
        public static new GetTokenArgs Empty => new GetTokenArgs();
    }

    public sealed class GetTokenInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the database token.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetTokenInvokeArgs()
        {
        }
        public static new GetTokenInvokeArgs Empty => new GetTokenInvokeArgs();
    }


    [OutputType]
    public sealed class GetTokenResult
    {
        /// <summary>
        /// The access token that can be used to authenticate query and write requests to the cluster. The access token is never stored by InfluxDB and is only returned once when the token is created. If the access token is lost, a new token must be created.
        /// </summary>
        public readonly string AccessToken;
        /// <summary>
        /// The ID of the account that the database token belongs to.
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// The ID of the cluster that the database token belongs to.
        /// </summary>
        public readonly string ClusterId;
        /// <summary>
        /// The date and time that the database token was created. Uses RFC3339 format.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// The description of the database token.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The ID of the database token.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of permissions the database token allows.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTokenPermissionResult> Permissions;

        [OutputConstructor]
        private GetTokenResult(
            string accessToken,

            string accountId,

            string clusterId,

            string createdAt,

            string description,

            string id,

            ImmutableArray<Outputs.GetTokenPermissionResult> permissions)
        {
            AccessToken = accessToken;
            AccountId = accountId;
            ClusterId = clusterId;
            CreatedAt = createdAt;
            Description = description;
            Id = id;
            Permissions = permissions;
        }
    }
}
